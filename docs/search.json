[
  {
    "objectID": "research.html",
    "href": "research.html",
    "title": "Research",
    "section": "",
    "text": "Publications\nI have worked as author for these\nResearch Associate for these"
  },
  {
    "objectID": "posts/dc_solar_web.html",
    "href": "posts/dc_solar_web.html",
    "title": "cross_section_models",
    "section": "",
    "text": "Solar panels are currently XXX of the US market, with adoption low.\nRenewable Portfolio Standard (RPS) policies are designed to increase uptake of renewable energy.\nDC’s RPS is one of the country’s most ambitious,\nPolicy changes\n\nDistributed Generation Amendment Act of 2011 (Oct 2011)\n\nshall not certify any tier one renewable source solar energy system larger than 5 MW in capacity or not in the District\n\nRenewable Energy Portfolio Standard Amendment Act (Apr 2015)\n\nBiomass related\n\nRenewable Portfolio Standard Expansion Amendment Act (Oct. 2016)\n\nRaised RPS requirements\nRaised ACP trajectory\n\nClean Energy DC Omnibus Amendment Act ( March 2022)\n\nIncreased the solar RPS requirements to 5.5% by 2032\nIncreased ACP trajectory\n\n\n\n\n\n\n\n\n\nConsumption is given by PJM STATS CITE. DC generated just 23% of its electricity from solar in 2023.\nBut there has been tremendous growth.\n\n\n\n\n\n\n\n\n\n\nShow the code\n# Animate the plot\nanim &lt;- p + transition_reveal(date) + \n  enter_grow() +  # Animation for entering points\n  exit_fade() +   # Animation for exiting points\n  ease_aes('cubic-in-out') + # Animation speed\n  labs(title = 'Year: {frame_along}', subtitle = \"Tier-One Renewable Percent\") # Update title with year\n\n# Render the animation\nanimate(anim, duration = 10, fps = 30, width = 800, height = 600, renderer =gifski_renderer())\n\n\n\n\n\nWith the help of DC Open Data’s frequently updated and granular urban data on buildings, it is straightforward to combine these into the largest single-city datasets for almost all of DC’s 110,000 residential buildings. - CAMA\n\nDC Solar monthly\nNote: Linking these two datasets is more complex than a single merge. The common thing is address, but CAMA doesn’t have address directly. It has the Square Suffix Lot (SSL) number, which identifies the plot of land on which a building sits. Some lots have multiple buildings, and some buildings/complexes span multiple lots.\n\nWe then have a dataset with the below outline\n\n\n\n\n\nSSL\nSTYLE_D\nROOF_D\nNBHDNAME\ncap_kw\nmax_sun_hours\nmin_dc_kwh\n\n\n\n\n3978 0019\n2 Story\nMetal- Sms\nBrookland\n0\n1583.277\n1515.455\n\n\n5198W 0020\n2 Story\nShingle\nDeanwood\n0\n1599.635\n1585.850\n\n\n5390 0810\nSplit Foyer\nShingle\nFort Dupont Park\n2.6\n1470.398\n1436.796\n\n\n5252 0181\n2 Story\nShingle\nDeanwood\n4.68\n1484.654\n1441.397\n\n\n3782 0055\n2 Story\nShingle\nBrookland\n1.56\n1623.857\n1621.908\n\n\n\n\n\n\n\nWhy is this interesting? If you look at this CITE PAPER - ML can reduce ‘SOFT COSTS’\n\n\n\nHow much does it cost to install a solar panel on average? Installation cost = $13,000\nIn a centrally planned economy, the DC Mayor could issue an edict, and armies of government workers would install a solar panel on each roof, and the goal would be met within a week. However, that is not how a free-market democracy works, and we would\nA household in DC can factor in four types of incentives available for a solar installation :\n\nFederal rebate\nSREC\n\n\n\n\n\n\n\nTip with Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\nNet metering\n\nThere is another type of indirect incentive, which might function as a ‘stick’ to the above ‘carrots’. This is the Building Energy Benchmarking Policy (BEPS), which aims to identify and impose financial penalties on large buildings (&gt;10,000 sq feet) with greater than average energy consumption\nTwo studies have been conducted on the state of solar adoption in Washington DC, by Synapse Energy Economics in 2019 and 2022.\nThe second study lays out the factors which hinder higher adoption in DC.\n\nRenters (less than 30% single-family owner-occupied housing)\nRising ACPs - People will anticipate higher compensation in future, and may delay purchases.\nElectricity prices: Higher electricity and enery prices, or basically that increases energy expenditure will lead people to\n\nThe shortfall between SREC supply and RPS requirement gives the revenues to DC DOEE\nCITE PAPER - SREC protectionism did increase adoption\n\n\n\n\n\nShow the code\nst_acs &lt;- get_acs(variables = c(total_pop = \"B02001_001E\", \n                                  owner_occupied = \"B25003_002E\",\n                                  total_occupied = \"B25003_001E\"),\n                    geography = \"block group\",\n                    geometry = TRUE,\n                    state = \"DC\", \n                    year = 2019) \n\n\n\n\nWhat does data from the American Community Survey tell us, about what these"
  },
  {
    "objectID": "posts/dc_solar_web.html#dc-open-data---buildings-and-solar",
    "href": "posts/dc_solar_web.html#dc-open-data---buildings-and-solar",
    "title": "cross_section_models",
    "section": "",
    "text": "With the help of DC Open Data’s frequently updated and granular urban data on buildings, it is straightforward to combine these into the largest single-city datasets for almost all of DC’s 110,000 residential buildings. - CAMA\n\nDC Solar monthly\nNote: Linking these two datasets is more complex than a single merge. The common thing is address, but CAMA doesn’t have address directly. It has the Square Suffix Lot (SSL) number, which identifies the plot of land on which a building sits. Some lots have multiple buildings, and some buildings/complexes span multiple lots.\n\nWe then have a dataset with the below outline\n\n\n\n\n\nSSL\nSTYLE_D\nROOF_D\nNBHDNAME\ncap_kw\nmax_sun_hours\nmin_dc_kwh\n\n\n\n\n3978 0019\n2 Story\nMetal- Sms\nBrookland\n0\n1583.277\n1515.455\n\n\n5198W 0020\n2 Story\nShingle\nDeanwood\n0\n1599.635\n1585.850\n\n\n5390 0810\nSplit Foyer\nShingle\nFort Dupont Park\n2.6\n1470.398\n1436.796\n\n\n5252 0181\n2 Story\nShingle\nDeanwood\n4.68\n1484.654\n1441.397\n\n\n3782 0055\n2 Story\nShingle\nBrookland\n1.56\n1623.857\n1621.908\n\n\n\n\n\n\n\nWhy is this interesting? If you look at this CITE PAPER - ML can reduce ‘SOFT COSTS’"
  },
  {
    "objectID": "posts/dc_solar_web.html#the-dc-solar-market",
    "href": "posts/dc_solar_web.html#the-dc-solar-market",
    "title": "cross_section_models",
    "section": "",
    "text": "How much does it cost to install a solar panel on average? Installation cost = $13,000\nIn a centrally planned economy, the DC Mayor could issue an edict, and armies of government workers would install a solar panel on each roof, and the goal would be met within a week. However, that is not how a free-market democracy works, and we would\nA household in DC can factor in four types of incentives available for a solar installation :\n\nFederal rebate\nSREC\n\n\n\n\n\n\n\nTip with Title\n\n\n\nThis is an example of a callout with a title.\n\n\n\nNet metering\n\nThere is another type of indirect incentive, which might function as a ‘stick’ to the above ‘carrots’. This is the Building Energy Benchmarking Policy (BEPS), which aims to identify and impose financial penalties on large buildings (&gt;10,000 sq feet) with greater than average energy consumption\nTwo studies have been conducted on the state of solar adoption in Washington DC, by Synapse Energy Economics in 2019 and 2022.\nThe second study lays out the factors which hinder higher adoption in DC.\n\nRenters (less than 30% single-family owner-occupied housing)\nRising ACPs - People will anticipate higher compensation in future, and may delay purchases.\nElectricity prices: Higher electricity and enery prices, or basically that increases energy expenditure will lead people to\n\nThe shortfall between SREC supply and RPS requirement gives the revenues to DC DOEE\nCITE PAPER - SREC protectionism did increase adoption"
  },
  {
    "objectID": "posts/dc_solar_web.html#get-census-data-using-tidycensus",
    "href": "posts/dc_solar_web.html#get-census-data-using-tidycensus",
    "title": "cross_section_models",
    "section": "",
    "text": "Show the code\nst_acs &lt;- get_acs(variables = c(total_pop = \"B02001_001E\", \n                                  owner_occupied = \"B25003_002E\",\n                                  total_occupied = \"B25003_001E\"),\n                    geography = \"block group\",\n                    geometry = TRUE,\n                    state = \"DC\", \n                    year = 2019) \n\n\n\n\nWhat does data from the American Community Survey tell us, about what these"
  },
  {
    "objectID": "posts/dc_solar_web.html#check-out-this-in-progress-dashboard-here",
    "href": "posts/dc_solar_web.html#check-out-this-in-progress-dashboard-here",
    "title": "cross_section_models",
    "section": "Check out this in-progress dashboard here!",
    "text": "Check out this in-progress dashboard here!"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "test-web",
    "section": "",
    "text": "I am a economist/data scientist with research interests in explainable machine learning, energy and development I am completing a MS in Data Science and Public Policy from Georgetown University, and I have a M.Phil in Economics from Centre for Development Studies, where my thesis focused on urban infrastructure growth and its effects on the knowledge economy in India.\nI currently work as a graduate research assistant at the Massive Data Institute.\nCheck out the following links:\n\nResume\nPortfolio\nPublications\n\nContact Information\nEmail: hk939@georgetown.edu\nGithub:"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Portfolio\nWelcome to my portfolio page! Here are some of my projects:\n\nProject 1 - A detailed analysis in a Jupyter Notebook.\nProject 2 - Insights derived from R Markdown.\n\nFeel free to explore the projects and learn more about my work."
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html",
    "href": "posts/Optimization_Kentucky_retrofit.html",
    "title": "BlocPower Report",
    "section": "",
    "text": "Code\nimport time\nimport warnings\nimport numpy as np\nimport pandas as pd\nimport seaborn as sns\nimport matplotlib.pyplot as plt\nimport geopandas as gpd\nimport folium\nimport zipfile\nfrom h3 import h3\nfrom scipy.linalg import toeplitz\nfrom scipy.stats import pearsonr\nfrom sklearn.preprocessing import MinMaxScaler\nfrom shapely.geometry import Point, Polygon\nfrom shapely import wkt, affinity\nfrom shapely.wkt import loads\nfrom branca.colormap import linear\nfrom IPython.core.interactiveshell import InteractiveShell\nfrom h3 import h3\n\nfrom shapely import wkt\nimport os\nimport geopandas as gpd\nimport folium\n\nimport contextily as cx\n\nfrom shapely.geometry import Point\n# Set interactivity to all\nSet up Gurobi license\nhttps://www.gurobi.com/documentation/9.5/quickstart_windows/reading_and_optimizing_a_m.html"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#introduction",
    "href": "posts/Optimization_Kentucky_retrofit.html#introduction",
    "title": "BlocPower Report",
    "section": "1.1 Introduction",
    "text": "1.1 Introduction\nBuilding decarbonization is a critical component of the multiple transitions needed to combat climate change. The Inflation Reduction Act of 2022 provides unprecedented incentives for households to install home improvements for electrification and energy efficiency, like installing heat pumps instead of fossil-fuel powered heaters and weatherization/insulation (https://www.nytimes.com/interactive/2023/climate/tax-breaks-inflation-reduction-act.html)\nThese efforts have been aided by technological advances in the form of fine-grained building-level data, recently available at nationwide scale. One such dataset - developed by BlocPower - uses data on building type and equipment (single -family/multi-family, heating and cooling systems) sourced from tax assessment records. It then uses them as inputs for energy modeling algorithms/software developed by the Department of Energy. Crucially, this allows estimation of counterfactuals, i.e. the reduction in energy usage that would result from targeted retrofits. BlocPower’s own core operation takes building data for a city, uses their proprietary algorithm to estimate the ideal intervention, potential cost of a retrofit, and projected reduction in energy use (it also provides financing options).\nFinance is the key variable in these ambitious transition plans. Many of the new policies provide incentives like tax credits and rebates, instead of direct transfers to finance retrofits. However, it is useful to get an estimate of the total cost required to achieve a specified reduction in energy use and emissions from buildings. (This is also useful where governments are spending money directly to decarbonize their own building portfolios). https://www.whitehouse.gov/briefing-room/statements-releases/2022/12/07/fact-sheet-biden-harris-administration-announces-first-ever-federal-building-performance-standard-catalyzes-american-innovation-to-lower-energy-costs-save-taxpayer-dollars-and-cut-emissions/\nThe set of possible interventions for each building can consist of:\nWeatherization Energy efficiency retrofits/electrification Rooftop solar Linear programming formulation Despite some differences in these particular interventions, the basic structure requires an upfront cost to be spent on a building, after which its energy usage will go down by some factor (i.e. there will be energy savings). For our current purpose, let weatherization be the only building intervention we consider. We abstract away the exact financing mechanisms included in the IRA and BIL (rebates and incentives), and assume that the local government has a fixed budget to allocate for weatherizing buildings. The objective is to maximize energy savings - or equivalently, reduce emissions - subject to the constraint that the total cost cannot be larger than the budget. For this, we need recommendations of which buildings to target.\nLinear programming is a well-established mathematical tool used for policy purposes, starting from optimizing military logistics during WW2 to optimizing the energy source mixture (see appendix). This problem formulation fits well with a linear programming framework. Specifically, this is an example of a Mixed-Integer Programming (MIP) problem, as the solution must be an integer (we can’t weatherize 3.6 buildings).\nRead in geocoded building data (Madisonville, KY)¶\n\n\nCode\n# # # Load data blocpower\n# # zipdf = pd.read_csv(\"Merged_CJEST.csv\")\n\n# # mic = pd.read_csv(\"Microsoft_Building_zip.csv\")\n# # ########################################################################\n\n# # mic['zcta'] = mic['zcta'].astype(str)\n\n# # zipdf['zipcode'] = zipdf['zipcode'].astype(str)\n# # zipdf = zipdf.merge(mic, how='left', left_on='zipcode', right_on='zcta')\n\n# # # Load the shapefile of zipcodes from the US Census Bureau website\n# # tiger_shp_url = 'https://www2.census.gov/geo/tiger/TIGER2022/ZCTA520/tl_2022_us_zcta520.zip'\n# # zip_shp = gpd.read_file(tiger_shp_url)\n# # # no state column in 2022 file\n\n\n# # # Rename the ZIP code column to \"zip\" and select the \"zip\" and \"geometry\" columns\n# # zip_shp = zip_shp.rename(columns={\"GEOID\": \"zip_code\",\n# #                                   \"geometry\": \"zip_geom\"})\n# # # zip_shp = zip_shp[['zip_name', 'zip_fips', 'geometry']]\n\n# # zip_shp['zcta_shp'] = zip_shp.ZCTA5CE20.astype(str)\n# # zipdf['zcta_bp'] = zipdf.zipcode.astype(str)\n\n\n# # zip_shp = zip_shp.merge(zipdf, how='left', left_on='zcta_shp', right_on='zcta_bp')\n\n# # zip_shp = zip_shp[~(zip_shp.state_code.isin(['AK', 'HI']))]\n\n# # #zip_shp = gpd.GeoDataFrame(zip_shp, geometry='zip_geom', crs='epsg:4326')\n\n# # zip_shp.to_csv(r'C:\\Users\\HK\\Downloads\\Final_Report\\Final_Report\\cejst_bp_zip_shp.csv')\n\n\n# zipdf = pd.read_csv('cejst_bp_zip_shp.csv')\n\n# zipdf['zip_geom'] = zipdf['zip_geom'].apply(wkt.loads)\n# zipdf = gpd.GeoDataFrame(zipdf, geometry = zipdf['zip_geom'], crs='epsg:4326')\n# zipdf = zipdf.round(2)\n\n\n# # Load the shapefile of counties from the US Census Bureau \n# state_url = 'https://www2.census.gov/geo/tiger/TIGER2022/STATE/tl_2022_us_state.zip'\n# st_shp = gpd.read_file(state_url)\n# statedf = pd.read_csv('state_shp.csv')\n# st_shp = st_shp.merge(statedf, left_on='STUSPS', right_on='num_state', how='inner')"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#interactive-plotly-map-in-quarto",
    "href": "posts/Optimization_Kentucky_retrofit.html#interactive-plotly-map-in-quarto",
    "title": "BlocPower Report",
    "section": "1.2 Interactive plotly map in Quarto",
    "text": "1.2 Interactive plotly map in Quarto\nhttps://quarto.org/docs/interactive/widgets/jupyter.html"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#current-policy-context",
    "href": "posts/Optimization_Kentucky_retrofit.html#current-policy-context",
    "title": "BlocPower Report",
    "section": "2.1 1.1 Current Policy Context",
    "text": "2.1 1.1 Current Policy Context\nhttps://www.bloomberg.com/news/articles/2023-05-11/biden-adopts-new-green-building-energy-standards-for-housing"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#related-literature-and-data",
    "href": "posts/Optimization_Kentucky_retrofit.html#related-literature-and-data",
    "title": "BlocPower Report",
    "section": "2.2 1.2 Related literature and data",
    "text": "2.2 1.2 Related literature and data\nOver the past year, the Environmental Impact Data Collaborative has partnered with BlocPower - a Brooklyn-based climate technology company that uses building-level energy use data to guide community decarbonization projects. A key element of this partnership has been EIDC’s role in helping make BlocPower’s data available to researchers in the environmental justice space.\nBlocPower uploaded 3,309 data points for more than 121 million buildings to EIDC. This data is stored in Amazon Web Services and was transferred to Redivis using the built-in RestAPI. Additionally, this process occurred in two phases: first, BlocPower uploaded data for 39 states in January 2023, and second, they uploaded data for the additional 11 states and Washington D.C. in April 2023. This was ingested on MDI EIDC’s Google Cloud storage.\n[Sources]\nThe source of this data is tax assessment records, which provide real data on building system types and attributes (like built year and area). This data then serves as inputs to an Automatic Building Energy Modeling (AutoBEM) developed by Oak Ridge National Laboratory\nRECS"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#data-availability---kentucky",
    "href": "posts/Optimization_Kentucky_retrofit.html#data-availability---kentucky",
    "title": "BlocPower Report",
    "section": "2.3 1.3 Data Availability - Kentucky",
    "text": "2.3 1.3 Data Availability - Kentucky\n\n\nCode\n# Specify the path to your zip file and the extraction directory\nzip_path = \"data/geocoded_kentucky_zip_buildings.zip\"\n\n# Specify the csv file name if known; otherwise, you can list contents and choose\ncsv_file_name = \"geocoded_kentucky_zip_buildings.csv\"\n\n# Use zipfile to extract\nwith zipfile.ZipFile(zip_path, 'r') as zip_ref:\n    # If you know the name of the csv file you can extract it directly\n    zip_ref.extract(csv_file_name)\n\ndf = pd.read_csv(r\"geocoded_kentucky_zip_buildings.csv\")  # Reference any table in this project\n\n# df.to_parquet(r'D:\\Work\\Georgetown\\acad\\mdi\\final_portfolio\\blocpower-building-energy\\ky_buildings.parquet')\n\n\n\n\nCode\ntest = df[['geocoded', 'building_id' , 'building_type' , 'heating_fuel_type', 'total_site_energy_GJ',\n            \"address\", \"area_sq_ft\", \"energy_use_intensity\"]]\n\ntest = test[test['heating_fuel_type'] != 'Unknown']\ntest = test.dropna(subset=['heating_fuel_type'])\n#test = test.sample(frac=0.8).reset_index()\ntest['geocoded'] = test['geocoded'].str.replace('(','').str.replace(')','') # Remove parentheses\ntest[['lat', 'lon']] = test['geocoded'].str.split(',', expand=True)\ntest['lat'] = test['lat'].astype(float)\ntest['lon'] = test['lon'].astype(float)\n\n# Convert latitude and longitude to a point\ntest['geometry'] = test.apply(lambda row: Point(row.lon, row.lat), axis=1)"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#model-formulation",
    "href": "posts/Optimization_Kentucky_retrofit.html#model-formulation",
    "title": "BlocPower Report",
    "section": "3.1 Model Formulation",
    "text": "3.1 Model Formulation\n\nGoogle Doc: Google Doc Link\nPaper: ScienceDirect Paper Link\n\n\n3.1.1 Sets and Indices\n\n\\(i \\in T\\): Index and set of potential buildings to weatherize.\n\n\n\n3.1.2 Parameters\n\n\\(c_i \\in \\mathbb{R}_+\\): The cost of weatherizing building \\(i\\).\n\\(e_i \\in \\mathbb{R}_+\\): The energy use of building \\(i\\).\n\n\n\n3.1.3 Decision Variables\n\n\\(w_i \\in [0,1]\\): This variable is equal to 1 if building \\(i\\) is weatherized; and 0 otherwise.\n\n\n\n3.1.4 Objective Function\n\nEnergy savings: We seek to maximize the total energy savings from all buildings.\n\nMaximize \\(Z = \\sum_{i \\in T} e_i \\cdot w_i\\)` \\((1)\\)\n\n\n\n\n3.1.5 Constraints\n\nBudget: We need to ensure that the total cost of interventions does not exceed the allocated budget.\n\n\\(\\sum_{i \\in T} c_i \\cdot w_i \\leq \\text{budget}\\) \\((2)\\)\nBudget = USD 3,000,000\n\n\n\n\n3.1.6 Parameters\n\nCosts: The complication is that the cost \\(c_i\\) and energy savings \\(e_i\\) is different for each building, based on the chosen intervention and the building’s own characteristics. Installing a heat pump or weatherizing in a gas-heating building of 6,000 sq. ft. would have a different cost from installing the same equipment in an oil-heating building of 3,000 sq. ft. Depending on local labor and material costs, even the exact same project on comparable buildings would have different costs in Wichita and Ithaca.\n\n\n3.1.6.1 Industry experts have the following input:\n\nEngie: ‘Because of the wide variations, a heuristic approach is probably the best you can do.’\nBlocPower: ‘The cost estimation is a process which requires local data, personnel hours and itself has an expense associated with it’\n\n\n\n\n3.1.7 Energy savings:\n\nThe original paper by Heleno et al (2022) seems to use a heuristic approach, by calculating cost and savings factors from the Weatherization Assistance Program (WAP) for different types of building archetypes. ScienceDirect Paper Link\n\nFor this current example, we assume the following factors. So, weatherizing a gas-heated building reduces energy use by 4% and costs 2000 USD.\n\n3.1.7.1 Energy savings factors:\n\nGas Buildings = 0.96\nOil Buildings = 0.98\n\n\n\n3.1.7.2 Cost:\n\nGas buildings = 2000\nOil Buildings = 3000\n\nMultiply the above factors with the cost and energy columns to obtain 2 new columns per building, $e_i$ (energy savings after weatherization) and $c_i$ (cost of weatherization).\nhttps://www.sciencedirect.com/science/article/pii/S0306261922010510\nEnergy savings achieved: 61656.41 GJ Cost of intervention: USD 3000000 Buildings weatherized: 1442 Visualize recommendations on map\n\n\nCode\n# gdf = gdf.round(2)\n# # merge to optimized dataframe\n# gdf = gdf.merge(test, left_on='building_id', right_on='building_id', how='inner')\n\n# Convert the DataFrame to a GeoDataFrame\ngdf = gpd.GeoDataFrame(test, geometry='geometry', crs='epsg:4326')\n\n# create retrofit column\n# gdf['Retrofit?'] = gdf['opt'].apply(lambda x: 'YES' if x == 1 else 'NO')\n\n#round energy savings column\n# gdf['energy_savings'] = gdf['energy_savings'].round(3)\n\nm1 = gdf.explore(\"energy_use_intensity\", #tooltip=False, #categorical=True, \n                 tooltip=[\"address\", \"area_sq_ft\", \"energy_use_intensity\",\n                        \"building_type\", \"heating_fuel_type\"])\n\n # Set `preferCanvas` to optimize performance of map\nm1.options[\"preferCanvas\"] = True\n\n#set a tile layer - OSM\nfolium.TileLayer(\"OpenStreetMap\").add_to(m1)\nm1\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook\n\n\n\n\nCode\nm1.save\n\n\n&lt;bound method Element.save of &lt;folium.folium.Map object at 0x000002298783F220&gt;&gt;"
  },
  {
    "objectID": "posts/Optimization_Kentucky_retrofit.html#h3",
    "href": "posts/Optimization_Kentucky_retrofit.html#h3",
    "title": "BlocPower Report",
    "section": "3.2 H3",
    "text": "3.2 H3\n\n\nCode\nfrom h3 import h3\n\n\ndef update_map(h3_level=10):\n    def lat_lng_to_h3(row):\n        return h3.geo_to_h3(row.geometry.y, row.geometry.x, h3_level)\n\n    gdf['h3'] = gdf.apply(lat_lng_to_h3, axis=1)\n\n    counts = gdf[gdf['energy_use_intensity'] &gt; np.median(gdf['energy_use_intensity'])].groupby('h3').size().reset_index(name='count')\n    \n    def add_geometry(row):\n        points = h3.h3_to_geo_boundary(row['h3'], True)\n        return Polygon(points)\n\n    counts['geometry'] = counts.apply(add_geometry, axis=1)\n    ky_hex = gpd.GeoDataFrame(counts, geometry='geometry', crs='EPSG:4326')\n\n    m = folium.Map(location=[37.3, -87.56], zoom_start=12)\n\n    colormap = linear.YlOrRd_09.scale(ky_hex['count'].min(), ky_hex['count'].max())\n\n    folium.GeoJson(\n        ky_hex,\n        name='geojson',\n        style_function=lambda feature: {\n            'fillColor': colormap(feature['properties']['count']),\n            'color': 'black',\n            'weight': .8,\n            'fillOpacity': 0.7,\n        },\n        tooltip=folium.GeoJsonTooltip(fields=['count'])\n    ).add_to(m)\n\n    colormap.add_to(m)\n\n    return m\n\nupdate_map(h3_level=9)\n\n\n\nMake this Notebook Trusted to load map: File -&gt; Trust Notebook"
  },
  {
    "objectID": "posts/dc_solar_web.html#sample-tidycensus-code",
    "href": "posts/dc_solar_web.html#sample-tidycensus-code",
    "title": "cross_section_models",
    "section": "",
    "text": "Show the code\n# Animate the plot\nanim &lt;- p + transition_reveal(date) + \n  enter_grow() +  # Animation for entering points\n  exit_fade() +   # Animation for exiting points\n  ease_aes('cubic-in-out') + # Animation speed\n  labs(title = 'Year: {frame_along}', subtitle = \"Tier-One Renewable Percent\") # Update title with year\n\n# Render the animation\nanimate(anim, duration = 10, fps = 30, width = 800, height = 600, renderer =gifski_renderer())"
  },
  {
    "objectID": "posts/dc_solar_web.html#sample-gganimate-code",
    "href": "posts/dc_solar_web.html#sample-gganimate-code",
    "title": "cross_section_models",
    "section": "",
    "text": "Show the code\n# Animate the plot\nanim &lt;- p + transition_reveal(date) + \n  enter_grow() +  # Animation for entering points\n  exit_fade() +   # Animation for exiting points\n  ease_aes('cubic-in-out') + # Animation speed\n  labs(title = 'Year: {frame_along}', subtitle = \"Tier-One Renewable Percent\") # Update title with year\n\n# Render the animation\nanimate(anim, duration = 10, fps = 30, width = 800, height = 600, renderer =gifski_renderer())"
  },
  {
    "objectID": "index.html#bio",
    "href": "index.html#bio",
    "title": "test-web",
    "section": "",
    "text": "I am a economist/data scientist with research interests in explainable machine learning, energy and development I am completing a MS in Data Science and Public Policy from Georgetown University, and I have a M.Phil in Economics from Centre for Development Studies, where my thesis focused on urban infrastructure growth and its effects on the knowledge economy in India.\nI currently work as a graduate research assistant at the Massive Data Institute.\nCheck out the following links:\n\nResume\nPortfolio\nPublications\n\nContact Information\nEmail: hk939@georgetown.edu\nGithub:"
  }
]